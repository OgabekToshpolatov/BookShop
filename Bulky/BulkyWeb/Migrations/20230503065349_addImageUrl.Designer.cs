// <auto-generated />
using System;
using BulkyBook.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BulkyBookWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230503065349_addImageUrl")]
    partial class addImageUrl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("BulkyBook.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(2023, 5, 3, 11, 53, 48, 844, DateTimeKind.Local).AddTicks(5699),
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(2023, 5, 3, 11, 53, 48, 844, DateTimeKind.Local).AddTicks(5712),
                            DisplayOrder = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(2023, 5, 3, 11, 53, 48, 844, DateTimeKind.Local).AddTicks(5713),
                            DisplayOrder = 3,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("BulkyBook.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<double>("ListPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<double>("Price100")
                        .HasColumnType("REAL");

                    b.Property<double>("Price50")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Bilby Spark",
                            CategoryId = 1,
                            Description = "Praesnt vitae doesnt sodales decabryu. Prasent meolstio orco augue, vitae diecription bnd to array",
                            ISBN = "SWD9999001",
                            ImageUrl = "",
                            ListPrice = 99.0,
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0,
                            Title = "Fortune Of Time"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Roben Sharma",
                            CategoryId = 1,
                            Description = "Praesnt vitae doesnt sodales decabryu. Prasent meolstio orco augue, vitae diecription bnd to array",
                            ISBN = "SWD8899001",
                            ImageUrl = "",
                            ListPrice = 98.0,
                            Price = 91.0,
                            Price100 = 80.0,
                            Price50 = 84.0,
                            Title = "Garry Poter"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Abdulla Qodiriy",
                            CategoryId = 2,
                            Description = "Praesnt vitae doesnt sodales decabryu. Prasent meolstio orco augue, vitae diecription bnd to array",
                            ISBN = "SWD9988001",
                            ImageUrl = "",
                            ListPrice = 93.0,
                            Price = 91.0,
                            Price100 = 83.0,
                            Price50 = 84.0,
                            Title = "Otgan kunlar"
                        });
                });

            modelBuilder.Entity("BulkyBook.Models.Product", b =>
                {
                    b.HasOne("BulkyBook.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
